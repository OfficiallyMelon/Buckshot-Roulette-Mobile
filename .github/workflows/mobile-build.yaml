name: Build Godot (iOS + Android)

on:
  push:
    branches: ["**"]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-13
    env:
      GODOT_VERSION: "4.3"
      EXPORT_PRESET_IOS: "iOS"
      EXPORT_PRESET_ANDROID: "Android"
      EXPORT_DIR_IOS: "build/ios"
      EXPORT_DIR_ANDROID: "build/android"
      ARCHIVE_PATH: "build/App.xcarchive"
      DEPLOYMENT_TARGET: "12.0"

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install deps
        run: |
          brew install jq
          sudo gem install xcpretty

      - name: Install Godot
        run: |
          mkdir -p tools/godot
          cd tools/godot
          curl -L -o godot.zip "https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_macos.universal.zip"
          unzip -q godot.zip
          mv Godot.app/Contents/MacOS/Godot Godot
          chmod +x Godot
          cd -

          TEMPLATES_DIR="$HOME/Library/Application Support/Godot/export_templates/${GODOT_VERSION}.stable"
          mkdir -p "${TEMPLATES_DIR}"
          curl -L -o templates.tpz "https://github.com/godotengine/godot-builds/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_export_templates.tpz"
          unzip -q templates.tpz -d templates_unpacked
          cp -R templates_unpacked/templates/* "${TEMPLATES_DIR}/"

      - name: Parse release info
        id: rel
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          echo "commit=$COMMIT_MSG"

          if [[ "$COMMIT_MSG" =~ ^RELEASE[[:space:]]*\| ]]; then
            TAG=$(echo "$COMMIT_MSG" | sed -n 's/.*TAG[: ]\{0,1\}\([vV][0-9.]*\).*/\1/p' | head -1)
            NAME=$(echo "$COMMIT_MSG" | cut -d"|" -f3- | xargs)

            # Use the full commit message (with body) as release description
            DESC="${COMMIT_MSG}"

            echo "release=true" >> $GITHUB_OUTPUT
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
            echo "name=${NAME}" >> $GITHUB_OUTPUT

            {
              echo "desc<<EOF"
              echo "$DESC"
              echo "EOF"
            } >> $GITHUB_OUTPUT
          else
            echo "release=false" >> $GITHUB_OUTPUT
          fi


      - name: Build iOS + Android (Performance + Quality)
        run: |
          set -euxo pipefail

          # Decide version/sha
          if [[ "${{ steps.rel.outputs.release }}" == "true" ]]; then
            VERSION="${{ steps.rel.outputs.tag }}"
          else
            VERSION="${{ github.sha }}"
          fi

          build_variant () {
            VARIANT="$1"   # Performance / Quality
            METHOD="$2"    # mobile / forward_plus

            # Patch project.godot
            sed -i.bak "s/^renderer\\/rendering_method.mobile=.*/renderer\\/rendering_method.mobile=\"${METHOD}\"/" project.godot

            # iOS
            tools/godot/Godot --headless --path . --export-release "${EXPORT_PRESET_IOS}" "${EXPORT_DIR_IOS}"
            # (xcodebuild + ipa packaging same as before)
            mv "Buckshot-${VERSION}.ipa" "BuckshotRoulette-${VARIANT}-${VERSION}.ipa"

            # Android
            tools/godot/Godot --headless --path . --export-release "${EXPORT_PRESET_ANDROID}" "BuckshotRoulette-${VARIANT}-${VERSION}.apk"
          }

          build_variant "Performance" "mobile"
          build_variant "Quality" "forward_plus"

      - name: Upload Artifacts (if not release)
        if: steps.rel.outputs.release == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: builds-${{ github.sha }}
          path: |
            BuckshotRoulette-Performance-*.ipa
            BuckshotRoulette-Quality-*.ipa
            BuckshotRoulette-Performance-*.apk
            BuckshotRoulette-Quality-*.apk
          if-no-files-found: error
          retention-days: 14

      - name: Upload Release (if release)
        if: steps.rel.outputs.release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.rel.outputs.tag }}
          name: ${{ steps.rel.outputs.name }}
          body: ${{ steps.rel.outputs.desc }}
          files: |
            BuckshotRoulette-Performance-${{ steps.rel.outputs.tag }}.ipa
            BuckshotRoulette-Quality-${{ steps.rel.outputs.tag }}.ipa
            BuckshotRoulette-Performance-${{ steps.rel.outputs.tag }}.apk
            BuckshotRoulette-Quality-${{ steps.rel.outputs.tag }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
